name: Rust

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set Env
        run: echo "${{ secrets.MY_ENV }}" >> $GITHUB_WORKSPACE/.env

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      # `cargo check` command here will use installed `nightly`
      # as it is set as an "override" for current directory

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: build --release


      - name: Deploy to Server  # 第二步，rsync推文件
        uses: AEnterprise/rsync-deploy@v1.0  # 使用别人包装好的步骤镜像
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}   # 引用配置，SSH私钥
          ARGS: -avz --delete --exclude='*.pyc'   # rsync参数，排除.pyc文件
          SERVER_PORT: '22'  # SSH端口
          FOLDER: ./target/release/*  # 要推送的文件夹，路径相对于代码仓库的根目录
          SERVER_IP: ${{ secrets.SSH_HOST }}  # 引用配置，服务器的host名（IP或者域名domain.com）
          USERNAME: ${{ secrets.SSH_USERNAME }}  # 引用配置，服务器登录名
          SERVER_DESTINATION: ~/rust-workspace/rs/   # 部署到目标文件夹